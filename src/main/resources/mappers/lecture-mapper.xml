<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LectureMapper">
	<resultMap type="LectureBoard" id="lectureResultMap">
		<id property="lBoardNo" 				column="L_BOARD_NO"/>
		<result property="userId"				column="USER_ID"/>
		<result property="lBoardTitle" 			column="L_BOARD_TITLE"/>
		<result property="lBoardLocalName" 		column="L_BOARD_LOCAL_NAME"/>
		<result property="lBoardCenterName" 	column="L_BOARD_CENTER_NAME"/>
		<result property="lBoardCourseName" 	column="L_BOARD_COURSE_NAME"/>
		<result property="lBoardContents" 		column="L_BOARD_CONTENTS"/>
		<result property="lBoardFileName" 		column="L_BOARD_FILE_NAME"/>
		<result property="lBoardFileRename" 	column="L_BOARD_FILE_RENAME"/>
		<result property="lBoardFilePath" 		column="L_BOARD_FILE_PATH"/>
		<result property="lBoardCreateDate" 	column="L_BOARD_CREATE_DATE"/>
		<result property="lBoardCount" 			column="L_BOARD_COUNT"/>
		<result property="lBoardUpCount" 		column="L_BOARD_UP_COUNT"/>
		<result property="lBoardDownCount" 		column="L_BOARD_DOWN_COUNT"/>
	</resultMap>
	<insert id="insertLecture">
		INSERT INTO LECTURE_BOARD_TBL 
		VALUES(SEQ_LBOARDNO.NEXTVAL,#{userId},#{lBoardTitle},#{lBoardLocalName},#{lBoardCenterName}
		,#{lBoardCourseName},#{lBoardContents},#{lBoardFileName},#{lBoardFileRename},#{lBoardFilePath}
		, DEFAULT, DEFAULT, DEFAULT, DEFAULT)
	</insert>
	<update id="updateLectureBoard">
		UPDATE LECTURE_BOARD_TBL
		SET L_BOARD_TITLE = #{lBoardTitle}, L_BOARD_LOCAL_NAME = #{lBoardLocalName}, L_BOARD_CENTER_NAME = #{lBoardCenterName}
			, L_BOARD_COURSE_NAME = #{lBoardCourseName}, L_BOARD_CONTENTS = #{lBoardContents}, L_BOARD_FILE_NAME = #{lBoardFileName}
			, L_BOARD_FILE_RENAME = #{lBoardFileRename}, L_BOARD_FILE_PATH = #{lBoardFilePath}, L_BOARD_CREATE_DATE = DEFAULT 
		WHERE L_BOARD_NO = #{lBoardNo}
	</update>
	
	<select id="selectAllLectureBoard" resultMap="lectureResultMap">
		SELECT * FROM LECTURE_BOARD_TBL ORDER BY L_BOARD_NO DESC
	</select>
	<select id="selectTotalCount" resultType="_int">
		SELECT Count (*) FROM LECTURE_BOARD_TBL	
		<where>
			<if test="searchCondition.toString() == 'title'">
				L_BOARD_TITLE LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="searchCondition.toString() == 'contents'">
				L_BOARD_CONTENTS LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="searchCondition.toString() == 'center'">
				L_BOARD_CENTER_NAME LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="searchCondition.toString() == 'local'">
				L_BOARD_LOCAL_NAME LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="searchCondition.toString() == 'all'">
				L_BOARD_TITLE LIKE '%'||#{searchValue}||'%'
				OR L_BOARD_CONTENTS LIKE '%'||#{searchValue}||'%'
				OR L_BOARD_CENTER_NAME LIKE '%'||#{searchValue}||'%'
				OR L_BOARD_LOCAL_NAME LIKE '%'||#{searchValue}||'%'
			</if>
		</where>
	</select>
	<select id="selectOneByNo" resultMap="lectureResultMap">
		SELECT * FROM LECTURE_BOARD_TBL WHERE L_BOARD_NO = #{lBoardNo}
	</select>
		
	<select id="selectAllByValue" resultMap="lectureResultMap">
		SELECT * FROM LECTURE_BOARD_TBL 
		<where>
			<if test="searchCondition.toString() == 'title'">
				L_BOARD_TITLE LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="searchCondition.toString() == 'contents'">
				L_BOARD_CONTENTS LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="searchCondition.toString() == 'center'">
				L_BOARD_CENTER_NAME LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="searchCondition.toString() == 'loacl'">
				L_BOARD_LOCAL_NAME LIKE '%'||#{searchValue}||'%'
			</if>
			<if test="searchCondition.toString() == 'all'">
				L_BOARD_TITLE LIKE '%'||#{searchValue}||'%'
				OR L_BOARD_CONTENTS LIKE '%'||#{searchValue}||'%'
				OR L_BOARD_CONTENTS LIKE '%'||#{searchValue}||'%'
				OR L_BOARD_LOCAL_NAME LIKE '%'||#{searchValue}||'%'
			</if>
			ORDER BY L_BOARD_NO DESC
		</where> 
	</select>
	
	<delete id="deleteLecture">
		DELETE FROM LECTURE_BOARD_TBL WHERE L_BOARD_NO = #{lBoardNo}
	</delete>
	
	<update id="updateLectureViewCount">
		UPDATE LECTURE_BOARD_TBL SET L_BOARD_COUNT = L_BOARD_COUNT + 1 WHERE L_BOARD_NO = #{lBoardNo}	
	</update>
	
	<update id="updateLectureUp">
		UPDATE LECTURE_BOARD_TBL SET L_BOARD_UPCOUNT = L_BOARD_UPCOUNT + 1 WHERE L_BOARD_NO = #{lBoardNo}
	</update>
	
	<!-- 댓글 관리 -->	
	<resultMap type="LectureBoardComment"  	 id="commentResultMap">
		<id 	property="lCommentNo" 		 column="L_COMMENT_NO" />
		<result property="lBoardNo" 		 column="L_BOARD_NO" />
		<result property="userId" 			 column="USER_ID" />
		<result property="lCommentContents"	 column="L_COMMENT_CONTENTS" />
		<result property="lCommentRegtime" 	 column="L_COMMENT_REGTIME" />
	</resultMap>
	<select id="selectAllComment" resultMap="commentResultMap">
		SELECT *
		FROM LECTURE_COMMENT_TBL WHERE L_BOARD_NO = #{lBoardNo} ORDER BY L_COMMENT_REGTIME DESC
	</select>
	<insert id="insertComment">
		INSERT INTO LECTURE_COMMENT_TBL
		VALUES(SEQ_LECTURE_COMMENT_NO.NEXTVAL, #{lBoardNo}, #{userId}, #{lCommentContents}, #{lCommentRegtime})
	</insert>
	<delete id="deleteComment">
		DELETE FROM LECTURE_COMMENT_TBL WHERE L_COMMENT_NO = #{lCommentNo}
	</delete>
	<update id="updateComment" parameterType="hashMap">
		UPDATE LECTURE_COMMENT_TBL SET L_COMMENT_CONTENTS = #{lcommentText}
		WHERE L_COMMENT_NO = #{lCommentNo}
	</update>
	
</mapper>